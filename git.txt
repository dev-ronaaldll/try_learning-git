git config --global user.email "you@example.com"
git config --global user.name "name"
#=================================================
# carga la carpeta en git
git init 
#=================================================

# revisa  los archivos editados
git status -s 

# actualiza los archivos editados 
git add * or path

#usar commit para guardar un status
git commit -m""

#=================================================
# lista de todos los ss 
git log --oneline

#=================================================
#restar a primer ss
git reset --hard ***** 

#=================================================
#crea seguimiento a todos los archivos
git add .

#=================================================
#edicion de commentario de version actual
git commit --amend

#=================================================
#subir archivois a github
git remote add origin https://github.com/ronaaldl/dash-flask-git.git
git push -u origin main
#================================================= 
git commit -am "description" # se omite git add.
#================================================= 

#===================origin git hub================= 
    …or create a new repository on the command line
    echo "# learning-git" >> README.md
    git init
    git add README.md
    git commit -m "first commit"
    git branch -M main
    git remote add origin https://github.com/ronaaldl/learning-git.git
    git push -u origin main

    …or push an existing repository from the command line
    git remote add origin https://github.com/ronaaldl/learning-git.git
    git branch -M main
    git push -u origin main
#================================================= 
git pull # actuzalizar datos que se tiene en git y no en local
#====================TAGS===================== 
 git tag tag1-v1 -m "version 1 de tags"
 git pushh --tags  
#================================================= 
git clone https://github.com/ronaaldl/learning-git.git
#==================ramas branch======================== 

git branch jsTestBranch # crea nueva ramas
git branch # visualiza las ramas existentes
git checkout jsTestBranch #cambia de ramas para trabajar

git merge jsTestBranch # copia datos de la branch "x" en el main ##hacerlo desde el branch main

#==================ramas branch======================== 
 git branch -d jsTestBranch #eliminacion de branchs

